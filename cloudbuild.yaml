## ## Ex. Setup with Dockerfile (image build) + docker-compose (container run parameters)
# Install dependencies
# steps:
# - name: 'gcr.io/cloud-builders/npm'
#   args: ['install']
# Run unit tests
# - name: 'gcr.io/cloud-builders/npm'
#   args: ['run', 'test:unit']
# Builds the Docker image of the application.
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/gcb-docker-compose:latest', '.']
# Runs the application and dependencies in the background using Docker compose.
# - name: 'docker/compose:1.15.0'
#   args: ['up', '-d']
#   env:
 # - 'PROJECT_ID=$PROJECT_ID'
# Runs the integration tests against the running Docker compose stack.
 # - name: 'gcr.io/cloud-builders/npm'
 #  args: ['run', 'test:integration']
 #  env:
 #  - 'HOST=counter' # name of the running container
 #  - 'PORT=50051'
# Push image Container Registry
# images:
# - 'gcr.io/$PROJECT_ID/quickstart-image:latest`


# Envs Needed
# REVISION_ID
# PROJECT_ID

# Build Dockerfile
steps:
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/quickstart-image:$REVISION_ID', '.' ]
# Push image Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/quickstart-image:$REVISION_ID']

# Deploy to cluster TBD
# - name: 'gcr.io/cloud-builders/kubectl'
#   args:
#   - 'set'
#   - 'image'
#   - 'deployment/my-deployment'
#   - 'my-container=gcr.io/my-project/my-image:$REVISION_ID'
#   env:
#   - 'CLOUDSDK_COMPUTE_ZONE=us-east4-b'
#   - 'CLOUDSDK_CONTAINER_CLUSTER=my-cluster'
