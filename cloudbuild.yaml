## ## Ex. Setup with Dockerfile (image build) + docker-compose (container run parameters)
# Install dependencies
# steps:
# - name: 'gcr.io/cloud-builders/npm'
#   args: ['install']
# Run unit tests
# - name: 'gcr.io/cloud-builders/npm'
#   args: ['run', 'test:unit']
# Builds the Docker image of the application.
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', 'gcr.io/$PROJECT_ID/gcb-docker-compose:latest', '.']
# Runs the application and dependencies in the background using Docker compose.
# - name: 'docker/compose:1.15.0'
#   args: ['up', '-d']
#   env:
 # - 'PROJECT_ID=$PROJECT_ID'
# Runs the integration tests against the running Docker compose stack.
 # - name: 'gcr.io/cloud-builders/npm'
 #  args: ['run', 'test:integration']
 #  env:
 #  - 'HOST=counter' # name of the running container
 #  - 'PORT=50051'
# Push image Container Registry
# images:
# - 'gcr.io/$PROJECT_ID/quickstart-image:latest`


# Working directory is now /workspace
steps:
# Pull and decrypt secrets
- name: gcr.io/cloud-builders/gcloud
  args:
  - kms
  - decrypt
  - --ciphertext-file=id_fulfilment-platform.enc
  - --plaintext-file=id_fulfilment-platform
  - --location=global
  - --keyring=ssh-keys
  - --key=fulfilment-platform

# Build Dockerfile
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/java-web:$BRANCH_NAME-$REVISION_ID', '.' ]
  env:
    - 
# Push image Container Registry
  image: 'gcr.io/$PROJECT_ID/java-web:$BRANCH_NAME-$REVISION_ID'
# Working directory is now /workspace


Deploy to cluster TBD
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/fulfilment-platform-deployment'
  - 'my-container=gcr.io/#PROJECT_ID/java-web:$BRANCH_NAME-$REVISION_ID'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=cluster-1'

  tags:
    - "java"
    - "web-frontend"
    - "logic-backend"
